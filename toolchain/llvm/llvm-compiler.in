#!/bin/bash
TARGET=@TARGET_ARCH@
FLAGS="$FLAGS -target $TARGET -march=@GCC_ARCH@ -mtune=@M_TUNE@"
FLAGS="$FLAGS @driver_mode@ --sysroot @MINGW_INSTALL_PREFIX@"
FLAGS="$FLAGS -fuse-ld=lld --ld-path=@TARGET_ARCH@-ld"
FLAGS="$FLAGS -Wno-unused-command-line-argument"

if [ "@LLVM_ENABLE_BOLT@" == "GEN" ] && [ -x "@CMAKE_INSTALL_PREFIX@/bin/llvm.instr" ] && [ "$CONF" != "1" ]; then
    PROG=@CMAKE_INSTALL_PREFIX@/bin/llvm.instr
elif [ "@LLVM_ENABLE_BOLT@" == "USE" ] && [ -x "@CMAKE_INSTALL_PREFIX@/bin/llvm.bolt" ]; then
    PROG=@CMAKE_INSTALL_PREFIX@/bin/llvm.bolt
else
    PROG=@CMAKE_INSTALL_PREFIX@/bin/llvm
fi

if [ "$CONF" == "1" ]; then
    SKIP_OPT="-g0 -O0 -fno-lto -fno-data-sections -fno-function-sections"
else
    FLAGS="$FLAGS -gcodeview @cfi@ @opt@"
    if [ "@ENABLE_CCACHE@" == "ON" ]; then
        CCACHE="ccache"
    fi
    if [ "$GC" != "0" ]; then
        CLANG_GC="-fdata-sections -ffunction-sections"
    fi
    if [ "$LTO" != "0" ] && [ "@CLANG_PACKAGES_LTO@" == "ON" ]; then
        LTO_FLAGS="-flto=thin"
        if [ "@LLD_LTO_ALL_THREADS@" == "ON" ] && [ "$LTO_JOB" != "1" ]; then
            LTO_FLAGS="$LTO_FLAGS -flto-jobs=@CPU_COUNT@"
        fi
    fi
    if [ "@LLVM_ENABLE_PGO@" == "GEN" ] || [ "@LLVM_ENABLE_PGO@" == "CSGEN" ]; then
        export LLVM_PROFILE_FILE="@LLVM_PROFILE_DATA_DIR@/clang-%m.profraw" #enable profraw output only when CONF!=1
    fi
fi

$CCACHE "$PROG" @clang_compiler@ $LTO_FLAGS "$@" $FLAGS $CLANG_GC @CLANG_FLAGS@ @linker@ $SKIP_OPT
